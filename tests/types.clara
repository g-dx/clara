fn main() {

    // NOTE: Must not assign 'block' to a local var otherwise
    // GC will attempt to walk it and crash!

    unsafe("Hello", -16, type(block)).printTypeName() // EXPECT: string

    unsafe(Bytes(0), -16, type(block)).printTypeName() // EXPECT: bytes

    unsafe(intArray(0), -16, type(block)).printTypeName() // EXPECT: []int

    unsafe(stringArray(0, ""), -16, type(block)).printTypeName() // EXPECT: []string

    unsafe(array(0, 0), -16, type(block)).printTypeName() // EXPECT: []?

    unsafe(println, -16, type(block)).printTypeName() // EXPECT: function

    unsafe(SomeStruct(1), -16, type(block)).printTypeName() // EXPECT: someStruct

    unsafe(Some(1), -16, type(block)).printTypeName() // EXPECT: option«T»
}

fn printTypeName(b: block) {
    typeInfoTable()[b.typeId()].getName().println()
}

struct someStruct {
    i: int
}
